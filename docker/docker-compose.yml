version: '3.8'

services:
  careplan-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres:5432/careplan_db}
      - EHR_API_URL=${EHR_API_URL:-http://ehr-mock:8080}
      - EHR_API_KEY=${EHR_API_KEY}
      - VECTOR_STORE_PATH=${VECTOR_STORE_PATH:-/app/data/vector_store}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - vector_data:/app/data
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - careplan-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=careplan_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - careplan-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - careplan-network

  # Mock EHR service for development
  ehr-mock:
    image: mockserver/mockserver:latest
    ports:
      - "8080:1080"
    environment:
      - MOCKSERVER_PROPERTY_FILE=/config/mockserver.properties
    volumes:
      - ./mock-configs/ehr-expectations.json:/config/expectations.json:ro
      - ./mock-configs/mockserver.properties:/config/mockserver.properties:ro
    networks:
      - careplan-network

  # Vector database (alternative to FAISS for distributed setup)
  # Uncomment if using Pinecone alternative
  # qdrant:
  #   image: qdrant/qdrant:latest
  #   ports:
  #     - "6333:6333"
  #   volumes:
  #     - qdrant_data:/qdrant/storage
  #   networks:
  #     - careplan-network

  # Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - careplan-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    networks:
      - careplan-network

volumes:
  postgres_data:
  redis_data:
  vector_data:
  prometheus_data:
  grafana_data:
  # qdrant_data:

networks:
  careplan-network:
    driver: bridge